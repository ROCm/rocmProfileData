CREATE VIEW api AS SELECT rocpd_api.id,pid,tid,start,end,A.string AS apiName, B.string AS args FROM rocpd_api INNER JOIN rocpd_string A ON A.id = rocpd_api.apiName_id INNER JOIN rocpd_string B ON B.id = rocpd_api.args_id;
CREATE VIEW op AS SELECT rocpd_op.id,gpuId,queueId,sequenceId,start,end,A.string AS description, B.string AS opType FROM rocpd_op INNER JOIN rocpd_string A ON A.id = rocpd_op.description_id INNER JOIN rocpd_string B ON B.id = rocpd_op.opType_id;
CREATE VIEW busy AS select A.gpuId, GpuTime, WallTime, GpuTime*1.0/WallTime as Busy from (select gpuId, sum(end-start) as GpuTime from rocpd_op group by gpuId) A INNER JOIN (select max(end) - min(start) as WallTime from rocpd_op);

create view ktop as select C.string as Name, count(C.string) as TotalCalls, sum(A.end-A.start) / 100 as TotalDuration, (sum(A.end-A.start)/count(C.string))/ 1000 as Ave, sum(A.end-A.start) * 100.0 / (select sum(A.end-A.start) from rocpd_op A join rocpd_kernelop B on B.op_ptr_id = A.id) as Percentage from rocpd_op A join rocpd_kernelop B on B.op_ptr_id = A.id join rocpd_string C on C.id = A.description_id group by Name order by TotalDuration desc;

create view top as select C.string as Name, count(C.string) as TotalCalls, sum(A.end-A.start) / 100 as TotalDuration, (sum(A.end-A.start)/count(C.string))/ 1000 as Ave, sum(A.end-A.start) * 100.0 / (select sum(A.end-A.start) from rocpd_op A) as Percentage from (select opType_id as name_id, start, end from rocpd_op where description_id in (select id from rocpd_string where string='') union select description_id, start, end from rocpd_op where description_id not in (select id from rocpd_string where string='')) A join rocpd_string C on C.id = A.name_id group by Name order by TotalDuration desc;
